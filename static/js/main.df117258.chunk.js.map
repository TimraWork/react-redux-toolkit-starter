{"version":3,"sources":["components/Counter/counterSlice.ts","components/Counter/Counter.tsx","components/Lang/Lang.tsx","components/Nav/Nav.tsx","components/Header/logo.svg","components/Header/Header.tsx","theme.ts","components/Footer/Footer.tsx","api.ts","components/Posts/postsSlice.ts","components/Loading/Loading.tsx","components/Posts/Posts.tsx","App.tsx","app/rootReducer.ts","app/store.ts","serviceWorker.ts","i18n/config.ts","index.tsx","components/Counter/Counter.module.css","components/Header/Header.module.css","components/Nav/Nav.module.scss","components/Posts/Posts.module.css"],"names":["counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","selectCount","counter","Counter","count","useSelector","dispatch","useDispatch","useState","incrementAmount","setIncrementAmount","t","useTranslation","Fade","in","timeout","className","styles","row","button","aria-label","onClick","textbox","onChange","e","target","Button","Number","asyncButton","amount","setTimeout","Lang","i18n","NativeSelect","id","i18next","language","disableUnderline","changeLanguage","LINKS","path","Nav","React","memo","nav","map","item","index","href","to","exact","Header","header","src","logo","alt","header__logo","ACCENT_COLOR","TEXT_COLOR","theme","createMuiTheme","palette","primary","main","secondary","contrastText","typography","fontFamily","body2","marginBottom","h1","fontWeight","fontSize","color","h2","h3","h4","h5","shape","borderRadius","overrides","MuiChip","root","margin","MuiCard","boxShadow","MuiTextField","borderColor","borderBottomColor","MuiNativeSelect","icon","MuiButton","outline","MuiInputLabel","Footer","footer","instance","axios","create","baseURL","postsSlice","data","isLoading","error","request","success","_transformPost","title","selectPosts","posts","selectIsLoading","Loading","CircularProgress","Posts","useEffect","length","a","get","App","ThemeProvider","component","rootReducer","combineReducers","counterReducer","postsReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","Boolean","window","location","hostname","match","resources","en","translation","ru","use","LanguageDetector","initReactI18next","init","fallbackLng","debug","keySeparator","interpolation","escapeValue","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.df117258.chunk.js","sourcesContent":["import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {AppThunk, RootState} from '../../app/store';\n\ninterface CounterState {\n  value: number;\n}\n\nconst initialState: CounterState = {\n  value: 0,\n};\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n});\n\nexport const {increment, decrement, incrementByAmount} = counterSlice.actions;\n\nexport const incrementAsync = (amount: number): AppThunk => (dispatch) => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\nexport default counterSlice.reducer;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  selectCount,\n} from \"./counterSlice\";\nimport styles from \"./Counter.module.css\";\nimport { Button, Fade } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\n\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState(\"2\");\n  const { t } = useTranslation();\n\n  return (\n    <Fade in={true} timeout={1200}>\n      <section className={styles.counter}>\n        <h1>{t(\"description.part2\")}</h1>\n        <div className={styles.row}>\n          <button\n            className={styles.button}\n            aria-label=\"Increment value\"\n            onClick={() => dispatch(increment())}\n          >\n            +\n          </button>\n          <span className={styles.value}>{count}</span>\n          <button\n            className={styles.button}\n            aria-label=\"Decrement value\"\n            onClick={() => dispatch(decrement())}\n          >\n            -\n          </button>\n        </div>\n        <div className={styles.row}>\n          <input\n            className={styles.textbox}\n            aria-label=\"Set increment amount\"\n            value={incrementAmount}\n            onChange={(e) => setIncrementAmount(e.target.value)}\n          />\n          <Button\n            onClick={() =>\n              dispatch(incrementByAmount(Number(incrementAmount) || 0))\n            }\n          >\n            Add Amount\n          </Button>\n          <Button\n            className={styles.asyncButton}\n            onClick={() =>\n              dispatch(incrementAsync(Number(incrementAmount) || 0))\n            }\n          >\n            Add Async\n          </Button>\n        </div>\n      </section>\n    </Fade>\n  );\n}\n","import { NativeSelect } from \"@material-ui/core\";\nimport i18next from \"i18next\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport function Lang() {\n  const { i18n } = useTranslation();\n\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    i18n.changeLanguage(e.target.value);\n  };\n\n  return (\n    <NativeSelect\n      id=\"select\"\n      value={i18next.language}\n      disableUnderline={true}\n      onChange={handleChange}\n    >\n      <option value=\"ru\">RU</option>\n      <option value=\"en\">EN</option>\n    </NativeSelect>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"./Nav.module.scss\";\n\nconst LINKS = [\n  {\n    name: \"Main\",\n    path: \"/\",\n  },\n  {\n    name: \"About\",\n    path: \"/about/\",\n  },\n  {\n    name: \"Posts\",\n    path: \"/posts/\",\n  },\n];\n\nexport const Nav: React.FC = React.memo(() => {\n  return (\n    <nav className={styles.nav}>\n      {LINKS.map((item, index) => (\n        <NavLink href=\"/\" key={index} to={item.path} exact>\n          {item.name}\n        </NavLink>\n      ))}\n    </nav>\n  );\n});\n","export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","import React from \"react\";\nimport { Lang } from \"../Lang/Lang\";\nimport { Nav } from \"../Nav/Nav\";\nimport styles from \"./Header.module.css\";\nimport logo from \"./logo.svg\";\n\nexport function Header() {\n  return (\n    <header className={styles.header}>\n      <img src={logo} alt=\"logo\" className={styles.header__logo} />\n      <Nav />\n      <Lang />\n    </header>\n  );\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nconst ACCENT_COLOR = \"rgb(105, 186, 190)\";\nconst TEXT_COLOR = \"rgba(0, 0, 0, 0.768)\";\n\n// Create a theme instance.\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: ACCENT_COLOR,\n    },\n    secondary: {\n      main: ACCENT_COLOR,\n      contrastText: \"#fff\",\n    },\n  },\n  typography: {\n    fontFamily: \"Roboto\",\n    body2: {\n      fontFamily: \"Roboto\",\n      marginBottom: \"10px\",\n    },\n    h1: {\n      fontWeight: \"bold\",\n      fontSize: \"40px\",\n      marginBottom: \"20px\",\n      color: TEXT_COLOR,\n    },\n    h2: {\n      fontWeight: \"bold\",\n      fontSize: \"36px\",\n      marginBottom: \"20px\",\n      color: TEXT_COLOR,\n    },\n    h3: {\n      fontWeight: \"bold\",\n      fontSize: \"34px\",\n      marginBottom: \"20px\",\n      color: TEXT_COLOR,\n    },\n    h4: {\n      fontWeight: \"bold\",\n      fontSize: \"26px\",\n      marginBottom: \"20px\",\n      color: TEXT_COLOR,\n    },\n    h5: {\n      fontWeight: \"bold\",\n      fontSize: \"22px\",\n      marginBottom: \"20px\",\n      color: TEXT_COLOR,\n    },\n  },\n  shape: {\n    borderRadius: 0,\n  },\n  overrides: {\n    MuiChip: {\n      root: {\n        margin: \"0 10px 20px 0\",\n      },\n    },\n    MuiCard: {\n      root: {\n        boxShadow: \"none\",\n      },\n    },\n    MuiTextField: {\n      root: {\n        borderColor: ACCENT_COLOR,\n        marginBottom: \"20px\",\n        // width: \"370px\",\n        \"& .MuiInput-underline:before\": {\n          borderBottomColor: ACCENT_COLOR,\n        },\n        \"&:hover\": {\n          borderBottomColor: ACCENT_COLOR,\n        },\n      },\n    },\n    MuiNativeSelect: {\n      root: {\n        color: \"#fff\",\n      },\n      icon: {\n        color: \"#fff\",\n      },\n    },\n    MuiButton: {\n      root: {\n        \"&:focus\": {\n          outline: \"none\",\n        },\n      },\n    },\n    MuiInputLabel: {\n      root: {\n        color: ACCENT_COLOR,\n      },\n    },\n  },\n});\n","import React from \"react\";\nimport styles from \"./Footer.module.css\";\n\nexport function Footer() {\n  return <footer className={styles.footer}>&copy; 2021</footer>;\n}\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://timra.ru/timra/wp-json/wp/v2\",\n});\n\nexport const getPostsRequest = () => {\n  return instance.get(\"/posts?_embed&per_page=10&page=1\");\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { AppThunk, RootState } from \"../../app/store\";\nimport { getPostsRequest } from \"../../api\";\n\nconst initialState = {\n  data: [] as Array<Object> | [],\n  isLoading: false as boolean,\n  error: null as string | null,\n};\n\nexport const postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    request: (state) => {\n      state.isLoading = true;\n    },\n    success: (state, action: any) => {\n      state.isLoading = false;\n      state.data = action.payload;\n    },\n  },\n});\n\nexport const { request, success } = postsSlice.actions;\n\nexport interface IPost {\n  id: number;\n  title: { rendered: string };\n}\nexport interface IPostTransform {\n  id: number;\n  title: string;\n}\n\nconst _transformPost = ({ id, title }: IPost): IPostTransform => {\n  return {\n    id: id,\n    title: title[\"rendered\"],\n  };\n};\n\nexport const getPostsThunk = (): AppThunk => async (dispatch) => {\n  dispatch(request());\n  const { data } = await getPostsRequest();\n  dispatch(success(data.map(_transformPost)));\n};\n\nexport const selectPosts = (state: RootState) => state.posts.data;\nexport const selectIsLoading = (state: RootState) => state.posts.isLoading;\n\nexport default postsSlice.reducer;\n","import { CircularProgress } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const Loading: React.FC = React.memo(() => {\n  return (\n    <div className=\"center_block\">\n      <CircularProgress />\n    </div>\n  );\n});\n","import React, { useEffect } from \"react\";\nimport {\n  getPostsThunk,\n  selectPosts,\n  selectIsLoading,\n  IPostTransform,\n} from \"./postsSlice\";\nimport styles from \"./Posts.module.css\";\nimport { Fade } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Loading } from \"../Loading/Loading\";\nimport { useTranslation } from \"react-i18next\";\n\nexport function Posts() {\n  const { t } = useTranslation();\n\n  const posts = useSelector(selectPosts);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!posts.length) {\n      dispatch(getPostsThunk());\n    }\n  }, []); // eslint-disable-line\n\n  const elements = () =>\n    (posts as IPostTransform[]).map(({ id, title }) => (\n      <div key={id}>\n        {title}\n        <br />\n      </div>\n    ));\n\n  return (\n    <Fade in={true} timeout={1200}>\n      <section className={styles.posts}>\n        <h1>{t(\"title\")}</h1>\n        {isLoading && <Loading />}\n        {posts && elements()}\n      </section>\n    </Fade>\n  );\n}\n","import React from \"react\";\nimport { Counter } from \"./components/Counter/Counter\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Header } from \"./components/Header/Header\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { theme } from \"./theme\";\nimport { Footer } from \"./components/Footer/Footer\";\nimport { Posts } from \"./components/Posts/Posts\";\n// import { Login } from \"./components/Login/Login\";\n\nconst App: React.FC = React.memo(() => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Header />\n      <main className=\"App\">\n        <Switch>\n          {/* <Route exact path=\"/\" component={Login} /> */}\n          <Route exact path=\"/posts\" component={Posts} />\n          <Route exact path=\"/about\" component={Counter} />\n        </Switch>\n      </main>\n      <Footer />\n    </ThemeProvider>\n  );\n});\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nimport counterReducer from \"../components/Counter/counterSlice\";\nimport postsReducer from \"../components/Posts/postsSlice\";\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n  posts: postsReducer,\n});\n\nexport default rootReducer;\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\nimport rootReducer from \"./rootReducer\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n\n// export type RootState = ReturnType<typeof rootReducer>;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nimport en from \"./en/translation.json\";\nimport ru from \"./ru/translation.json\";\n\nexport const resources = {\n  en: {\n    translation: en,\n  },\n  ru: {\n    translation: ru,\n  },\n} as const;\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n    debug: true,\n    resources,\n    keySeparator: false,\n\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { store, persistor } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./i18n/config\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__2d6O8\",\"row\":\"Counter_row__qB-H1\",\"value\":\"Counter_value__2-sRl\",\"button\":\"Counter_button__3DWPw\",\"textbox\":\"Counter_textbox__13qA1\",\"asyncButton\":\"Counter_asyncButton__3Hket\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__logo\":\"Header_header__logo__1ETZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2p4vD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__HBDHm\"};"],"sourceRoot":""}