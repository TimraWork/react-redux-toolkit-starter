{"version":3,"sources":["components/counter/Counter.module.css","components/header/Header.module.css","components/counter/counterSlice.ts","components/counter/Counter.tsx","components/nav/Nav.tsx","components/header/logo.svg","components/header/Header.tsx","theme.ts","components/footer/Footer.tsx","App.tsx","app/rootReducer.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","selectCount","counter","Counter","count","useSelector","dispatch","useDispatch","useState","incrementAmount","setIncrementAmount","Fade","in","timeout","className","styles","row","button","aria-label","onClick","textbox","onChange","e","target","Button","Number","asyncButton","amount","setTimeout","LINKS","path","Nav","React","memo","map","item","index","href","to","exact","Header","header","src","logo","alt","header__logo","ACCENT_COLOR","TEXT_COLOR","theme","createMuiTheme","palette","primary","main","secondary","contrastText","typography","fontFamily","body2","marginBottom","h1","fontWeight","fontSize","color","h2","h3","h4","h5","shape","borderRadius","overrides","MuiChip","root","margin","MuiCard","boxShadow","MuiTextField","borderColor","borderBottomColor","MuiNativeSelect","icon","MuiButton","outline","MuiInputLabel","Footer","footer","App","ThemeProvider","component","rootReducer","combineReducers","counterReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a8dded8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__2a2H-\",\"row\":\"Counter_row__2k2JV\",\"value\":\"Counter_value__3eew2\",\"button\":\"Counter_button__1vsxJ\",\"textbox\":\"Counter_textbox__ZPPax\",\"asyncButton\":\"Counter_asyncButton__3dTYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__logo\":\"Header_header__logo__2RKR2\"};","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {AppThunk, RootState} from '../../app/store';\n\ninterface CounterState {\n  value: number;\n}\n\nconst initialState: CounterState = {\n  value: 0,\n};\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n});\n\nexport const {increment, decrement, incrementByAmount} = counterSlice.actions;\n\nexport const incrementAsync = (amount: number): AppThunk => (dispatch) => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\nexport default counterSlice.reducer;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  selectCount,\n} from \"./counterSlice\";\nimport styles from \"./Counter.module.css\";\nimport { Button, Fade } from \"@material-ui/core\";\n\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState(\"2\");\n\n  return (\n    <Fade in={true} timeout={1200}>\n      <section className={styles.counter}>\n        <div className={styles.row}>\n          <button\n            className={styles.button}\n            aria-label=\"Increment value\"\n            onClick={() => dispatch(increment())}\n          >\n            +\n          </button>\n          <span className={styles.value}>{count}</span>\n          <button\n            className={styles.button}\n            aria-label=\"Decrement value\"\n            onClick={() => dispatch(decrement())}\n          >\n            -\n          </button>\n        </div>\n        <div className={styles.row}>\n          <input\n            className={styles.textbox}\n            aria-label=\"Set increment amount\"\n            value={incrementAmount}\n            onChange={(e) => setIncrementAmount(e.target.value)}\n          />\n          <Button\n            onClick={() =>\n              dispatch(incrementByAmount(Number(incrementAmount) || 0))\n            }\n          >\n            Add Amount\n          </Button>\n          <Button\n            className={styles.asyncButton}\n            onClick={() =>\n              dispatch(incrementAsync(Number(incrementAmount) || 0))\n            }\n          >\n            Add Async\n          </Button>\n        </div>\n      </section>\n    </Fade>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst LINKS = [\n  {\n    name: \"Main\",\n    path: \"/\",\n  },\n  {\n    name: \"About\",\n    path: \"/about/\",\n  },\n];\n\nexport const Nav: React.FC = React.memo(() => {\n  return (\n    <nav>\n      {LINKS.map((item, index) => (\n        <NavLink href=\"/\" key={index} to={item.path} exact>\n          {item.name}\n        </NavLink>\n      ))}\n    </nav>\n  );\n});\n","export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","import React from 'react';\nimport {Nav} from '../nav/Nav';\nimport styles from './Header.module.css';\nimport logo from './logo.svg';\n\nexport function Header() {\n  return (\n    <header className={styles.header}>\n      <img src={logo} alt=\"logo\" className={styles.header__logo} />\n      <Nav />\n    </header>\n  );\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nconst ACCENT_COLOR = \"rgb(105, 186, 190)\";\nconst TEXT_COLOR = \"rgba(0, 0, 0, 0.768)\";\n\n// Create a theme instance.\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: ACCENT_COLOR,\n    },\n    secondary: {\n      main: ACCENT_COLOR,\n      contrastText: \"#fff\",\n    },\n  },\n  typography: {\n    fontFamily: \"Roboto\",\n    body2: {\n      fontFamily: \"Roboto\",\n      marginBottom: \"10px\",\n    },\n    h1: {\n      fontWeight: \"bold\",\n      fontSize: \"40px\",\n      marginBottom: \"20px\",\n      color: TEXT_COLOR,\n    },\n    h2: {\n      fontWeight: \"bold\",\n      fontSize: \"36px\",\n      marginBottom: \"20px\",\n      color: TEXT_COLOR,\n    },\n    h3: {\n      fontWeight: \"bold\",\n      fontSize: \"34px\",\n      marginBottom: \"20px\",\n      color: TEXT_COLOR,\n    },\n    h4: {\n      fontWeight: \"bold\",\n      fontSize: \"26px\",\n      marginBottom: \"20px\",\n      color: TEXT_COLOR,\n    },\n    h5: {\n      fontWeight: \"bold\",\n      fontSize: \"22px\",\n      marginBottom: \"20px\",\n      color: TEXT_COLOR,\n    },\n  },\n  shape: {\n    borderRadius: 0,\n  },\n  overrides: {\n    MuiChip: {\n      root: {\n        margin: \"0 10px 20px 0\",\n      },\n    },\n    MuiCard: {\n      root: {\n        boxShadow: \"none\",\n      },\n    },\n    MuiTextField: {\n      root: {\n        borderColor: ACCENT_COLOR,\n        marginBottom: \"20px\",\n        // width: \"370px\",\n        \"& .MuiInput-underline:before\": {\n          borderBottomColor: ACCENT_COLOR,\n        },\n        \"&:hover\": {\n          borderBottomColor: ACCENT_COLOR,\n        },\n      },\n    },\n    MuiNativeSelect: {\n      root: {\n        color: \"#fff\",\n      },\n      icon: {\n        color: \"#fff\",\n      },\n    },\n    MuiButton: {\n      root: {\n        \"&:focus\": {\n          outline: \"none\",\n        },\n      },\n    },\n    MuiInputLabel: {\n      root: {\n        color: ACCENT_COLOR,\n      },\n    },\n  },\n});\n","import React from \"react\";\nimport styles from \"./Footer.module.css\";\n\nexport function Footer() {\n  return <footer className={styles.footer}>&copy; 2021</footer>;\n}\n","import React from \"react\";\nimport { Counter } from \"./components/counter/Counter\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Header } from \"./components/header/Header\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { theme } from \"./theme\";\nimport { Footer } from \"./components/footer/Footer\";\n\nconst App: React.FC<{}> = React.memo(() => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Header />\n      <main className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Counter} />\n          <Route exact path=\"/about\" component={Header} />\n        </Switch>\n      </main>\n      <Footer />\n    </ThemeProvider>\n  );\n});\n\nexport default App;\n","import {combineReducers} from 'redux';\n\nimport counterReducer from '../components/counter/counterSlice';\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n});\n\nexport default rootReducer;\n","import {configureStore, ThunkAction, Action, getDefaultMiddleware} from '@reduxjs/toolkit';\nimport rootReducer from './rootReducer';\nimport {persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nconst persistor = persistStore(store);\n\nexport {store, persistor};\n\n// export type RootState = ReturnType<typeof rootReducer>;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { store, persistor } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}